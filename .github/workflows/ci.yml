name: CI - Test & Report

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AZURE_STORAGE_ACCOUNT: qaplaywrightstorage

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Extract Azure credentials for Terraform
        run: |
          echo '${{ secrets.AZURE_CREDENTIALS }}' > azure_creds.json
          echo "ARM_CLIENT_ID=$(jq -r .clientId azure_creds.json)" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=$(jq -r .clientSecret azure_creds.json)" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=$(jq -r .subscriptionId azure_creds.json)" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=$(jq -r .tenantId azure_creds.json)" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: ./infra

      - name: Set up Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Run Playwright tests
        working-directory: ./playwright-tests
        run: |
          npm install
          npx playwright install
          npx playwright test

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Run API tests with pytest
        working-directory: ./api-tests/python
        run: |
          pip install -r requirements.txt
          pytest --html=../../reports/api_test_report.html

      - name: Upload Reports to Azure Blob Static Site
        run: |
          az storage blob upload-batch \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --destination \$web \
            --source reports \
            --overwrite
