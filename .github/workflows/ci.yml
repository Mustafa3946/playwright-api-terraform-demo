name: CI - Test & Report

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  AZURE_STORAGE_ACCOUNT: qaplaywrightstorage

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Node.js for Playwright
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache npm dependencies for Playwright tests
        uses: actions/cache@v3
        with:
          path: playwright-tests/node_modules
          key: ${{ runner.os }}-npm-playwright-${{ hashFiles('playwright-tests/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-playwright-

      - name: Install system dependencies required by Playwright
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-4-1 \
            libgraphene-1.0-0 \
            libwoff1 \
            libvpx9 \
            libevent-2.1-7 \
            libopus0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            gstreamer1.0-libav \
            gstreamer1.0-plugins-bad \
            libflite1 \
            libavif16 \
            libharfbuzz-icu0 \
            libsecret-1-0 \
            libhyphen0 \
            libmanette-0.2-0 \
            libgles2 \
            libx264-164

      - name: Install npm dependencies for Playwright tests
        working-directory: ./playwright-tests
        run: npm install

      - name: Install Playwright browsers and dependencies
        working-directory: ./playwright-tests
        run: |
          npx playwright install-deps
          npx playwright install

      - name: Run Playwright tests
        working-directory: ./playwright-tests
        run: |
          npx playwright test --reporter=html
          mkdir -p ../reports/ui
          if [ -d "playwright-report" ]; then
            cp -r playwright-report/* ../reports/ui/
          else
            echo "No playwright-report directory found"
          fi

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install Python dependencies for API tests
        working-directory: ./api-tests/python
        run: pip install -r requirements.txt

      - name: Run API tests with pytest
        working-directory: ./api-tests/python
        run: |
          mkdir -p ../../reports/api
          pytest --html=../../reports/api/index.html --self-contained-html

      - name: Create landing page index.html linking to reports
        run: |
          mkdir -p reports
          cat > reports/index.html <<EOF
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <title>Test Reports Landing Page</title>
            <style>
              body { font-family: Arial, sans-serif; margin: 40px; }
              h1 { font-size: 28px; margin-bottom: 20px; }
              ul { list-style-type: none; padding: 0; }
              li { margin: 15px 0; }
              a { font-size: 20px; color: #0078d4; text-decoration: none; }
              a:hover { text-decoration: underline; }
            </style>
          </head>
          <body>
            <h1>Test Reports</h1>
            <ul>
              <li><a href="/api/index.html" target="_blank">API Tests Report (Pytest)</a></li>
              <li><a href="/ui/index.html" target="_blank">UI Tests Report (Playwright)</a></li>
            </ul>
          </body>
          </html>
          EOF

      - name: Upload reports to Azure Blob Static Site
        run: |
          az storage blob upload \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --container-name \$web \
            --file reports/index.html \
            --name index.html \
            --overwrite

          az storage blob upload-batch \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --destination \$web/api \
            --source reports/api \
            --overwrite

          az storage blob upload-batch \
            --account-name $AZURE_STORAGE_ACCOUNT \
            --destination \$web/ui \
            --source reports/ui \
            --overwrite
